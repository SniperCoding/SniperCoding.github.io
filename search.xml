<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub+JSDelivr+PicGo+Typora搭建个人图床</title>
    <url>/2022/02/10/GitHub+JSDelivr+PicGo+Typora%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="0-初衷"><a href="#0-初衷" class="headerlink" title="0. 初衷"></a>0. 初衷</h1><blockquote>
<p>平时写文章，经常需要插入图片，免不了需要使用图床工具把本地图片转换成链接。市面上的图床工具非常多，但很多都需要收费，有些免费的也存在着不稳定的风险。<span id="more"></span>而 GitHub 作为全球最大的“同性交友网站”，不仅稳定性高，而且简单易用，关键还可以免费白嫖！下面教大家如何更好地利用 GitHub 搭建图床。</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221106.png" alt="image-20220208202732428" style="zoom: 67%;" />

<h1 id="1-创建-GitHub-仓库"><a href="#1-创建-GitHub-仓库" class="headerlink" title="1. 创建 GitHub 仓库"></a>1. 创建 GitHub 仓库</h1><p>注册&#x2F;登录自己的 GitHub，创建一个新的名字任意的<strong>公开</strong>仓库。然后上传图片到仓库中，这里我直接使用浏览器端上传的，也可以使用 Git 进行上传。</p>
<ul>
<li>在创建的仓库中点击<code>Upload files</code>。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221128.png" alt="image-20210903190649347" style="zoom: 110%;" />

<ul>
<li><p>选择上传的图片，然后提交。</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221131.png" alt="image-20220208204506190" style="zoom: 67%;" />
</li>
<li><p>提交之后，就可以在浏览器通过地址<code>https://raw.githubusercontent.com/你的用户名/你的仓库名/main/文件路径</code>来访问所上传的图片。</p>
<p>比如：<em><a href="https://raw.githubusercontent.com/SniperCoding/pictures1/main/avatar.jpg">https://raw.githubusercontent.com/SniperCoding/pictures1/main/avatar.jpg</a></em></p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221134.png" alt="image-20220208210418418" style="zoom: 67%;" />
</li>
<li><p>之后在博客中插入图片的时候，使用此链接即可。</p>
</li>
</ul>
<h1 id="2-使用-jsDelivr-进行-CDN-加速"><a href="#2-使用-jsDelivr-进行-CDN-加速" class="headerlink" title="2. 使用 jsDelivr 进行 CDN 加速"></a>2. 使用 jsDelivr 进行 CDN 加速</h1><p>前面已经利用 GitHub 仓库实现了图床功能，但是大家都知道，GitHub 在国内访问很慢，甚至经常打不开，那么我们的图片就存在加载速度慢的问题，怎么办呢？<strong>jsDelivr</strong> 可以解决此问题，显著提高图片访问的响应速度，并且开源免费！其官网为：<a href="https://www.jsdelivr.com/">jsDelivr - A free, fast, and reliable CDN for open source</a>。</p>
<p>使用方法也非常的简单，直接在浏览器通过地址<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code>就可以访问 GitHub 上的图片，并且响应速度非常快！其中@发布的版本号可以直接省略，默认加载最新版本，即直接可以简写为<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名/文件路径</code></p>
<p>比如：<em><a href="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/avatar.jpg">https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/avatar.jpg</a></em></p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221137.png" alt="image-20220208210418418" style="zoom: 67%;" />

<h1 id="3-使用PicGo上传图片"><a href="#3-使用PicGo上传图片" class="headerlink" title="3. 使用PicGo上传图片"></a>3. 使用PicGo上传图片</h1><p>前面实现了 GitHub 仓库作为图床，jsDelivr 对图片进行加速。但是每次我们都需要使用 Git 工具或者在 GitHub 仓库中进行上传图片，并且要自己拼接图片地址，非常麻烦，有没有更快速更简洁的方式呢？此时神器 <strong>PicGo</strong> 就派上了用场，同样开源免费！</p>
<p>PicGo 是一个用于快速上传图片并获取图片 URL 链接的工具，支持多个图床进行使用，其中当然包括我们现在使用的 GitHub 图床了，它同时支持 Windows、macOS、Linux平台，详情可见：<a href="https://github.com/Molunerfinn/PicGo">Molunerfinn&#x2F;PicGo: A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder (github.com)</a></p>
<p>这里以 Windows 为例，说明 PicGo 的使用方法。</p>
<ul>
<li><p>下载并安装 PicGo，<a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe">https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221141.png" alt="image-20210903201908609"></p>
</li>
<li><p>打开 PicGo 软件，找到<code>图床设置</code>中的<code>GitHub图床</code>，填写相关信息。</p>
<ul>
<li><p><strong>设定仓库名【必填】</strong>：填写<code>你的用户名/你的仓库名</code>，比如我的 SniperCoding&#x2F;pictures1</p>
</li>
<li><p><strong>设定分支名【必填】</strong>：填写<code>main</code></p>
</li>
<li><p><strong>设定Token【必填】</strong>：在Github主页点击自己头像后，依次选择【Settings】-&gt;【Developer settings】-&gt;【Personal access tokens】-&gt;【Generate new token】，填写Note描述（随便），设置过期时间Expiration为永不过期No expiration，设定勾选【repo】，点击下方的【Generate token】生成一个Token，将Token复制到 PicGo 中。</p>
</li>
<li><p>指定存储路径【选填】：可不填。</p>
</li>
<li><p><strong>设定自定义域名【选填】</strong>：图片上传后，PicGo 会按照【自定义域名+上传的图片名】的方式生成访问链接，放到剪贴板上，因为我们要使用 jsDeliver 进行加速，因而这里设置为<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名</code>，比如我设置为<strong><a href="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1">https://cdn.jsdelivr.net/gh/SniperCoding/pictures1</a></strong></p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221149.png" alt="image-20220208221048599" style="zoom: 67%;" />
</li>
<li><p>接着就可以在<code>上传区</code>，将自己的图片上传，甚至可以直接将剪切板的截图上传，上传成功后会直接将相应链接复制到剪切板中，我们就可以直接复制到博客（MarkDown 编辑器）中。</p>
</li>
<li><p>在<code>PicGo设置中</code>，可以自定义一些设置，比如上传前重命名、时间戳重命名等，自行设置。</p>
</li>
</ul>
<h1 id="4-Typora-配置-PicGo-上传"><a href="#4-Typora-配置-PicGo-上传" class="headerlink" title="4. Typora 配置 PicGo 上传"></a>4. Typora 配置 PicGo 上传</h1><p>前面使用了 PicGo 工具快速上传图片并获取图片 URL 链接，方便了很多，但是每次都要先在 PicGo 中进行上传，然后将剪切板中链接复制到 MarkDown 编辑器中，有没有更优雅简便的方式，可以将两步合二为一呢？答案是<strong>Typera+PicGo</strong>。</p>
<p>Typera 是一款轻便简洁的 Markdown 编辑器，可以即时渲染，并且完全免费，推荐大家用此软件进行写作，其官网为：<a href="https://www.typora.io/">Typora — a markdown editor, markdown reader.</a></p>
<p>下面介绍 Typora 结合 PicGo 实现上传功能。</p>
<ul>
<li><p>下载 Typora，网址<a href="https://www.typora.io/#windows">Typora — a markdown editor, markdown reader.</a></p>
</li>
<li><p>打开 PicGo，在<code>PicGo设置</code>中，点击【设置 Server 】，将监听端口修改为：36677</p>
</li>
<li><p>打开 Typera，点击【文件】 -&gt; 【偏好设置】-&gt; 【图像】，然后进行如下配置，其中 PicGo 路径是你的 PicGo 的安装路径。</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220208221154.png" style="zoom: 67%;" />


</li>
<li><p>在 Typera 中书写文章，插入图片（也可以直接将截图复制）时会自动将图片进行上传，并显示在文章中，非常的方便。</p>
</li>
</ul>
<p>以上就是使用 <code>GitHub</code> + <code>jsDelivr</code> + <code>PicGo</code> + <code>TyPora</code> 搭建免费稳定图床的全过程，希望对你有所帮助！</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo个人博客主题NexT的详细设置</title>
    <url>/2022/02/10/Hexo_Next%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<h1 id="一-Hexo修改主题"><a href="#一-Hexo修改主题" class="headerlink" title="一. Hexo修改主题"></a>一. Hexo修改主题</h1><blockquote>
<p>Hexo 默认的主题是 landscape，如果想要博客渲染更为美观，可自行修改主题。修改 Hexo 主题很方便，首先下载所需主题，放到 <code>themes</code> 文件夹内，然后修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可修改主题。下面以NexT主题为例。</p>
</blockquote>
<span id="more"></span>

<ul>
<li><p>下载 NexT 主题，并放到 themes&#x2F;next 文件夹中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210212915.png"></p>
</li>
<li><p>修改 _config.yml 文件，将 theme 修改为 next</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210212924.png"></p>
</li>
<li><p>之后再使用 <code>hexo clean</code>、<code>hexo g</code>、<code>hexo d </code>命令远程部署后，打开网站就会发现主题焕然一新。</p>
</li>
</ul>
<h1 id="二-NexT主题优化"><a href="#二-NexT主题优化" class="headerlink" title="二. NexT主题优化"></a>二. NexT主题优化</h1><blockquote>
<p>通过修改 NexT 主题的一些配置进行优化（中文参考文档 <a><a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a></a>），下面如果不特殊说明，默认修改的是 NexT 主题配置文件（Blog\themes\next\_config.yml），而不是Hexo配置文件（Blog\_config.yml），注意区分。</p>
</blockquote>
<h2 id="1、风格方案"><a href="#1、风格方案" class="headerlink" title="1、风格方案"></a>1、风格方案</h2><p>可选：Muse（ 默认）、Mist、Pisces、Gemini，可以根据喜好选择自己喜欢的方案。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>

<h2 id="2、导航栏菜单设置（首页、标签、归档等）"><a href="#2、导航栏菜单设置（首页、标签、归档等）" class="headerlink" title="2、导航栏菜单设置（首页、标签、归档等）"></a>2、导航栏菜单设置（首页、标签、归档等）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span>    			<span class="comment"># 首页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span>   		<span class="comment"># 关于</span></span><br><span class="line">  <span class="comment"># tags: /tags/ || fa fa-tags			# 标签</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span>    	<span class="comment"># 分类</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span>   	<span class="comment"># 归档</span></span><br><span class="line">  <span class="comment"># schedule: /schedule/ || fa fa-calendar	# 日历</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || fa fa-sitemap 	# 站点地图，供搜索引擎爬取</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || fa fa-heartbeat   	# 公益</span></span><br></pre></td></tr></table></figure>

<p>若想添加【分类】页面，除了修改上述配置文件外，还需要在 Git Bash 中输入<code>hexo new page categories</code>新建一个分类页面，否则点击分类会出现 404。在 Blog\source 文件夹下会生成 categories\index.md 文件，编辑此文件，添加<code>type: &quot;categories&quot;</code>；</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2022-02-10 14:50:56</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<p>之后在新生成文件后，可以在最开头加上 categories: 类别，如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">title: GitHub+JSDelivr+PicGo+Typora搭建个人图床</span><br><span class="line"><span class="built_in">date</span>: 2022-02-10 14:52:38</span><br><span class="line">categories: 图床</span><br></pre></td></tr></table></figure>

<p>【标签】页面与【分类】页面新建类似，<code>hexo new page tags</code>；</p>
<p>【关于】页面与【分类页面新建类似，<code>hexo new page about</code>，在 Blog\source 文件夹下会生成 about\index.md 文件，之后可以根据需要在 index.md 文件中书写相关内容。</p>
<h2 id="3、设置侧边栏（显示头像、社交账号等）"><a href="#3、设置侧边栏（显示头像、社交账号等）" class="headerlink" title="3、设置侧边栏（显示头像、社交账号等）"></a>3、设置侧边栏（显示头像、社交账号等）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 头像</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span>  	<span class="comment"># 头像地址（将头像放在themes\next\source\images目录下，并重命名）</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span> 		   <span class="comment"># 头像为圆形（true），头像为方形（false）</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span>		   <span class="comment"># 鼠标触碰头像时，头像旋转（true），不旋转（false）</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 社交账号 </span></span><br><span class="line"><span class="comment"># 格式为，链接名:链接地址 || 链接图标（Font Awesome icon）</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/SniperCoding</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br></pre></td></tr></table></figure>

<h2 id="4、设置文章目录"><a href="#4、设置文章目录" class="headerlink" title="4、设置文章目录"></a>4、设置文章目录</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  	<span class="comment"># 是否自动生成目录</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>  	<span class="comment"># 目录是否自动产生编号</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span>  		<span class="comment"># 标题过长是否换行</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">true</span>  	<span class="comment"># 是否展开所有级别</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">3</span>  	<span class="comment"># 最大标题深度</span></span><br></pre></td></tr></table></figure>

<h2 id="5、设置代码高亮主题和代码复制按钮"><a href="#5、设置代码高亮主题和代码复制按钮" class="headerlink" title="5、设置代码高亮主题和代码复制按钮"></a>5、设置代码高亮主题和代码复制按钮</h2><p>可选样式为：normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span>  <span class="comment"># 高亮主题样式</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>		<span class="comment"># 是否开启代码复制按钮</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span>		<span class="comment"># 是否显示代码复制结果</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span>			<span class="comment"># 风格，可选default | flat | mac</span></span><br></pre></td></tr></table></figure>

<h2 id="6、首页文章部分预览"><a href="#6、首页文章部分预览" class="headerlink" title="6、首页文章部分预览"></a>6、首页文章部分预览</h2><p>在首页，文章默认会全文显示，若想仅预览（显示）文章的前面一小部分。只需要在编写的md文章中，插入<code>&lt;!--more--&gt;</code> ，首页便只会显示此标记以前的内容。</p>
<h2 id="7、添加文章版权信息"><a href="#7、添加文章版权信息" class="headerlink" title="7、添加文章版权信息"></a>7、添加文章版权信息</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span>  		<span class="comment"># 执照类型 by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span>		<span class="comment"># 是否在侧边栏中显示版权标识</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span>		  	<span class="comment"># 是否每篇文章底部自动显示版权信息（本文作者、本文链接、版权声明）</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-Hans</span>	  	<span class="comment"># 语言</span></span><br></pre></td></tr></table></figure>

<p>注意需要将 Hexo 配置文件，（即 Blog\_coonfig.yml）中的 url 修改为自己的域名，否则显示本文链接时会出现问题。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://SniperCoding.github.io/</span></span><br></pre></td></tr></table></figure>

<h2 id="8、统计阅读人数-x2F-访客数信息"><a href="#8、统计阅读人数-x2F-访客数信息" class="headerlink" title="8、统计阅读人数&#x2F;访客数信息"></a>8、统计阅读人数&#x2F;访客数信息</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>                    	<span class="comment"># 是否启用不蒜子统计</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span>		<span class="comment"># 是否统计总访客数</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span>   <span class="comment"># 总访客数图标</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span>		<span class="comment"># 是否统计总访问数（所有文章访问数总和）</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span>	    <span class="comment"># 总访问数图标</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span>		<span class="comment"># 是否统计文章访问数</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span>	    <span class="comment"># 文章访问数图标</span></span><br></pre></td></tr></table></figure>

<h2 id="9、统计文章字数-x2F-阅读时间"><a href="#9、统计文章字数-x2F-阅读时间" class="headerlink" title="9、统计文章字数&#x2F;阅读时间"></a>9、统计文章字数&#x2F;阅读时间</h2><ul>
<li><p>安装 <code>hexo-symbols-count-time</code> 插件，在 Git Bash 中输入以下命令进行安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 NexT 配置文件（Blog\themes\next\_config.yml）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span>		<span class="comment"># 是否另起一行显示（即不和发表时间等同一行显示）</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span>		<span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span>		<span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 Hexo 配置文件（Blog\_config.yml）中新增如下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>				<span class="comment"># 是否统计文章阅读时长</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>				<span class="comment"># 是否统计文章字数</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>			<span class="comment"># 是否统计站点总阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>			<span class="comment"># 是否统计站点总字数</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">true</span>		<span class="comment"># 是否排除代码字数统计</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="10、侧栏显示阅读进度百分比"><a href="#10、侧栏显示阅读进度百分比" class="headerlink" title="10、侧栏显示阅读进度百分比"></a>10、侧栏显示阅读进度百分比</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>      	<span class="comment"># 是否开启</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span>  	<span class="comment"># 是否在侧边栏显示</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span>  	<span class="comment"># 按钮是否显示阅读进度</span></span><br></pre></td></tr></table></figure>

<h2 id="11、顶部加载阅读进度条"><a href="#11、顶部加载阅读进度条" class="headerlink" title="11、顶部加载阅读进度条"></a>11、顶部加载阅读进度条</h2><ul>
<li><p>安装 <code>reading_progress</code> 模块，在 Git Bash 输入以下命令进行安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-reading-progress themes/next/source/lib/reading_progress</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 NexT 配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>			<span class="comment"># 是否启用进度条</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span>			<span class="comment"># 进度条位置（top | bottom）</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span>		<span class="comment"># 进度条颜色</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span>			<span class="comment"># 进度条高度</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="12、添加评论系统（Valine）"><a href="#12、添加评论系统（Valine）" class="headerlink" title="12、添加评论系统（Valine）"></a>12、添加评论系统（Valine）</h2><ul>
<li><p>获取 <code>APP ID</code>  和  <code>APP Key</code></p>
<p>进入官网 <a href="https://leancloud.cn/">LeanCloud</a> 进行注册, 注册登陆认证后进入应用，点击创建应用，输入任意名称，并选择开发</p>
<p>版，点击创建。进入所创建的应用，选择左下角的<code>设置</code>&gt;<code>应用凭证</code>，就看到 <code>APP ID</code> 和 <code>APP Key</code>了。</p>
</li>
<li><p>将博客域名添加到安全域名中</p>
<p>进入所创建的应用，选择左下角<code>设置</code>&gt;<code>安全中心</code>，然后将自己的博客域名(举例：<a href="https://snipercoding.github.io/)%E5%A1%AB%E5%86%99%E5%9C%A8Web%E5%AE%89%E5%85%A8%E5%9F%9F%E5%90%8D%E4%B8%AD%EF%BC%8C%E5%B9%B6%E4%BF%9D%E5%AD%98%E3%80%82">https://snipercoding.github.io/)填写在Web安全域名中，并保存。</a></p>
</li>
<li><p>修改 NexT 配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>					<span class="comment"># 是否启动valine评论</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxxxx</span> 				<span class="comment"># 你的aapid【重要】</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">xxxxxx</span>				<span class="comment"># 你的appkey【重要】</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> 					<span class="comment"># 是否开启评论回复邮件通知</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span>	 				<span class="comment"># 评论前是否开启验证码</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">撰写你的评论叭~</span>    		<span class="comment"># 评论框的占位符</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> 					<span class="comment"># 头像风格</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> 			<span class="comment"># 自定义评论标题【昵称，邮箱，网址】</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> 					<span class="comment"># 分页大小</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span>				<span class="comment"># 语言</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> 				<span class="comment"># 是否允许游客评论</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> 				<span class="comment"># 评论计数是否显示在主页</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> 				<span class="comment"># 是否记录注释IP</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>评论数据管理</p>
<p>当想要管理用户的评论时，比如删除一些不当评论，可以到在 <a href="https://leancloud.cn/">LeanCloud</a>中进入<code>你创建的应用&gt;数据化存储&gt;结构化数据&gt;选择Class Comment</code>，进行管理。（注意，刚开始是没有Comment这个Class，当博客第一次有评论时，会自动创建，也可以自行先创建）</p>
</li>
<li><p>【问题记录1】，在修改_config.yml文件中的appid和appkey时，注意将后面的注释删除掉（有可能会把注释当成appid&#x2F;appkey的一部分），否则可能会出现401错误。</p>
</li>
<li><p>【问题记录2】，在文章顶部不显示评论数，而是显示valine，此时修改<code>themes/next/languages/zh-CN.yml</code>文件，在post标签下添加<code>comments.valine: 评论数</code>即可。</p>
</li>
<li><p>【问题记录3】，默认情况下，评论右下角会有Valine的角标（Powered By <a href="https://valine.js.org/">Valine</a>v1.4.14），如果想要将此删除，可以编辑<code>themes/next/layout/_third-party/comments/valine.swig</code>文件，修改为下面样式即可。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;%- set valine_uri = theme.<span class="property">vendors</span>.<span class="property">valine</span> or <span class="string">&#x27;//unpkg.com/valine/dist/Valine.min.js&#x27;</span> %&#125;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">loadComments</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#valine-comments&#x27;</span>), <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">getScript</span>(<span class="string">&#x27;&#123;&#123; valine_uri &#125;&#125;&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">GUEST</span> = [<span class="string">&#x27;nick&#x27;</span>, <span class="string">&#x27;mail&#x27;</span>, <span class="string">&#x27;link&#x27;</span>];</span><br><span class="line">    <span class="keyword">var</span> guest = <span class="string">&#x27;&#123;&#123; theme.valine.guest_info &#125;&#125;&#x27;</span>;</span><br><span class="line">    guest = guest.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>).<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable constant_">GUEST</span>.<span class="title function_">includes</span>(item);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Valine</span>(&#123;</span><br><span class="line">      el         : <span class="string">&#x27;#valine-comments&#x27;</span>,</span><br><span class="line">      verify     : &#123;&#123; theme.<span class="property">valine</span>.<span class="property">verify</span> &#125;&#125;,</span><br><span class="line">      notify     : &#123;&#123; theme.<span class="property">valine</span>.<span class="property">notify</span> &#125;&#125;,</span><br><span class="line">      appId      : <span class="string">&#x27;&#123;&#123; theme.valine.appid &#125;&#125;&#x27;</span>,</span><br><span class="line">      appKey     : <span class="string">&#x27;&#123;&#123; theme.valine.appkey &#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">placeholder</span>: &#123;&#123; theme.<span class="property">valine</span>.<span class="property">placeholder</span> | json &#125;&#125;,</span><br><span class="line">      avatar     : <span class="string">&#x27;&#123;&#123; theme.valine.avatar &#125;&#125;&#x27;</span>,</span><br><span class="line">      meta       : guest,</span><br><span class="line">      pageSize   : <span class="string">&#x27;&#123;&#123; theme.valine.pageSize &#125;&#125;&#x27;</span> || <span class="number">10</span>,</span><br><span class="line">      visitor    : &#123;&#123; theme.<span class="property">valine</span>.<span class="property">visitor</span> &#125;&#125;,</span><br><span class="line">      lang       : <span class="string">&#x27;&#123;&#123; theme.valine.language &#125;&#125;&#x27;</span> || <span class="string">&#x27;zh-cn&#x27;</span>,</span><br><span class="line">      path       : location.<span class="property">pathname</span>,</span><br><span class="line">      recordIP   : &#123;&#123; theme.<span class="property">valine</span>.<span class="property">recordIP</span> &#125;&#125;,</span><br><span class="line">      serverURLs : <span class="string">&#x27;&#123;&#123; theme.valine.serverURLs &#125;&#125;&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 添加以下内容，删除Powered By Valine</span></span><br><span class="line">    <span class="keyword">var</span> infoEle = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.vpower&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (infoEle)&#123;</span><br><span class="line">        infoEle.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(infoEle);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="13、修改网站底部信息（footer）"><a href="#13、修改网站底部信息（footer）" class="headerlink" title="13、修改网站底部信息（footer）"></a>13、修改网站底部信息（footer）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2022</span>  			<span class="comment"># 建站时间</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span>	<span class="comment"># 一个❤的图标</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span>		<span class="comment"># 图标是否跳动</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#ff0000&quot;</span>	<span class="comment"># 图标颜色</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span>  		<span class="comment"># 是否显示“由 Hexo &amp; NexT.Gemini 强力驱动”</span></span><br></pre></td></tr></table></figure>

<p>若想在底部显示站点运行时间，可编辑<code>\themes\next\layout\_partials\footer.swig</code>，在下图所在位置添加指定内容</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210212936.png" alt="" style="zoom:67%;" />

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">function</span> <span class="title function_">siteTime</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>()+<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="comment">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		year - 作为date对象的年份，为4位年份值</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		month - 0-11之间的整数，做为date对象的月份</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		day - 1-31之间的整数，做为date对象的天数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		seconds - 0-59之间的整数，做为date对象的秒数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">		microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2021</span>,<span class="number">08</span>,<span class="number">13</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//北京时间2021-08-13 00:00:00（修改为自己的建站时间）</span></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diff = t2-t1;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff/years);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff/days)-diffYears*<span class="number">365</span>);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span><br><span class="line"><span class="language-javascript">		<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sitetime&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot; 本网站已运行&quot;</span>+<span class="comment">/*diffYears+&quot; 年 &quot;+*/</span>diffDays+<span class="string">&quot; 天 &quot;</span>+diffHours+<span class="string">&quot; 小时 &quot;</span>+diffMinutes+<span class="string">&quot; 分钟 &quot;</span>+diffSeconds+<span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript">	<span class="title function_">siteTime</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="14、添加网易云音乐"><a href="#14、添加网易云音乐" class="headerlink" title="14、添加网易云音乐"></a>14、添加网易云音乐</h2><ul>
<li>在网页版<a href="https://music.163.com/">网易云音乐</a>中选择自己喜欢的歌曲&#x2F;歌单，然后点击<u>生成外链播放器</u>，官方教程<a href="https://music.163.com/#/outchain/0/786909207/">https://music.163.com/#/outchain/0/786909207/</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210212944.png" alt="" style="zoom:50%;" />

<ul>
<li><p>在生成外链界面，修改所要显示的格式以及宽高，然后复制HTML代码</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213009.png" alt="" style="zoom: 67%;" />
</li>
<li><p>将代码插入到<code>Blog\themes\next\layout\_macro\sidebar.swig</code>文件中（位置仅供参考，可自行选择所需位置，不同的位置效果呈现的效果不同）。</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213036.png" alt="" style="zoom:60%;" /></li>
</ul>
<h2 id="15、设置主题页面布局为圆角"><a href="#15、设置主题页面布局为圆角" class="headerlink" title="15、设置主题页面布局为圆角"></a>15、设置主题页面布局为圆角</h2><p>将页面中的方形边框修改为圆角。</p>
<ul>
<li><p>打开<code>Blog\themes\next\source\css\_variables\Gemini.styl </code>文件（我用的是 Gemini 主题风格，如果用的是其他的，就打开相应的文件）</p>
<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213056.png" alt="" style="zoom: 67%;" />
</li>
<li><p>将最低端代码修改为以下内容（可自行修改圆角尺寸，这里以15px为例）</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// $border-radius-inner    = initial;</span></span><br><span class="line"><span class="comment">// $border-radius		= initial;</span></span><br><span class="line"><span class="variable">$border</span>-radius-inner = <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span>;</span><br><span class="line"><span class="variable">$border</span>-radius = <span class="number">15px</span>;</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213146.png" alt="" style="zoom:67%;" /></li>
</ul>
<h2 id="16、添加动态背景（添加动态背景的同时也可以添加静态背景）"><a href="#16、添加动态背景（添加动态背景的同时也可以添加静态背景）" class="headerlink" title="16、添加动态背景（添加动态背景的同时也可以添加静态背景）"></a>16、添加动态背景（添加动态背景的同时也可以添加静态背景）</h2><p>Nest支持的常见的动态背景有 <strong>Canvas-nest</strong> 风格、**JavaScript 3D  library <strong>风格 、</strong>Canvas-ribbon **风格三种动态背景，但都需要自己手动下载相应静态资源，这里以 <strong>JavaScript 3D  library</strong> 风格为例。</p>
<p>JavaScript 3D  library 的官方地址为<a href="https://github.com/theme-next/theme-next-three">https://github.com/theme-next/theme-next-three</a></p>
<ul>
<li><p>Git Bash 进入 NexT 文件目录，然后将动态背景模块安装到 <code>source\lib</code> 目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-three <span class="built_in">source</span>/lib/three</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 <code>Blog\themes\next\_config.yml</code> 配置文件，启动 JavaScript 3D library，并且设置<code>three_waves\canvas_lines\canvas_sphere </code> 三个中任意一个为true（三个背景的样式不同，可自行选择）</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">three:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>			<span class="comment"># 启用此动态背景</span></span><br><span class="line">  <span class="attr">three_waves:</span> <span class="literal">false</span>		<span class="comment"># 动态背景样式一</span></span><br><span class="line">  <span class="attr">canvas_lines:</span> <span class="literal">true</span>		<span class="comment"># 动态背景样式二</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span> <span class="literal">false</span>		<span class="comment"># 动态背景样式三</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="17、鼠标点击出现礼花效果"><a href="#17、鼠标点击出现礼花效果" class="headerlink" title="17、鼠标点击出现礼花效果"></a>17、鼠标点击出现礼花效果</h2><ul>
<li><p>在 <code>Blog/themes/next/source/js</code> 里面新建 <code>fireworks.js</code> 的文件，并写入以下内容。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span> = &#123; ...<span class="variable language_">this</span>.<span class="property">origin</span> &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">color</span> = color</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">speed</span> = speed</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">angle</span> = angle</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCount</span> = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">beginPath</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">fill</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> = (<span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> = (<span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> + (<span class="variable language_">this</span>.<span class="property">renderCount</span> * <span class="number">0.3</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCount</span>++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boom</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circleCount</span> = circleCount</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">area</span> = area</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">false</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span> = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomArray</span>(<span class="params">range</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.<span class="property">length</span></span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length * <span class="title class_">Math</span>.<span class="title function_">random</span>())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomRange</span>(<span class="params">start, end</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="title class_">Math</span>.<span class="title function_">random</span>() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">circleCount</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">Circle</span>(&#123;</span><br><span class="line">        <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">context</span>,</span><br><span class="line">        <span class="attr">origin</span>: <span class="variable language_">this</span>.<span class="property">origin</span>,</span><br><span class="line">        <span class="attr">color</span>: <span class="variable language_">this</span>.<span class="title function_">randomColor</span>(),</span><br><span class="line">        <span class="attr">angle</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="title class_">Math</span>.<span class="property">PI</span> - <span class="number">1</span>, <span class="title class_">Math</span>.<span class="property">PI</span> + <span class="number">1</span>),</span><br><span class="line">        <span class="attr">speed</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">push</span>(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.<span class="property">position</span>.<span class="property">x</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">width</span> || circle.<span class="property">position</span>.<span class="property">y</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">height</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.<span class="title function_">move</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">circles</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">circle</span> =&gt;</span> circle.<span class="title function_">draw</span>())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CursorSpecialEffects</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerContext</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalWidth</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalHeight</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handleMouseDown</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> <span class="title class_">Boom</span>(&#123;</span><br><span class="line">      <span class="attr">origin</span>: &#123; <span class="attr">x</span>: e.<span class="property">clientX</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> &#125;,</span><br><span class="line">      <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">computerContext</span>,</span><br><span class="line">      <span class="attr">area</span>: &#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="variable language_">this</span>.<span class="property">globalWidth</span>,</span><br><span class="line">        <span class="attr">height</span>: <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.<span class="title function_">init</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">push</span>(boom)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> || <span class="variable language_">this</span>.<span class="title function_">run</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handlePageHide</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">style</span></span><br><span class="line">    style.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">    style.<span class="property">top</span> = style.<span class="property">left</span> = <span class="number">0</span></span><br><span class="line">    style.<span class="property">zIndex</span> = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">    style.<span class="property">pointerEvents</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">    style.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">globalWidth</span></span><br><span class="line">    style.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">renderCanvas</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousedown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleMouseDown</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pagehide&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handlePageHide</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">booms</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable language_">this</span>.<span class="property">run</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.<span class="property">stop</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.<span class="title function_">move</span>()</span><br><span class="line">      boom.<span class="title function_">draw</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">drawImage</span>(<span class="variable language_">this</span>.<span class="property">computerCanvas</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> <span class="title class_">CursorSpecialEffects</span>()</span><br><span class="line">cursorSpecialEffects.<span class="title function_">init</span>()</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 <code>Blog\themes\next\layout\_layout.swig</code> 文件，添加如下内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125; </span><br><span class="line">   &lt;script async <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;    </span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220211083455.png" style="zoom:67%;" />
</li>
<li><p>打开 <code>Blog\themes\next\_config.yml</code> 配置文件，在任意位置添加以下内容</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 鼠标点击，出现烟花效果</span></span><br><span class="line">fireworks: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="18、修改网页图标"><a href="#18、修改网页图标" class="headerlink" title="18、修改网页图标"></a>18、修改网页图标</h2><p>Hexo 博客的默认图标是 <code>N</code>，可自定义修改，步骤如下：</p>
<ul>
<li><p>准备一张 16*16 大小的 png 格式图标和一张 32*32 大小的png格式图标，然后放置到<code>Blog\themes\next\source\images</code> 文件夹下。</p>
</li>
<li><p>修改 <code>Blog\themes\next\_config.yml</code> 配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/tiger_16_16.png</span>   	<span class="comment"># 自定义16*16图片的路径名 </span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/tiger_32_32.png</span>	<span class="comment"># 自定义32*32图片的路径名 </span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="19、添加页面萌宠"><a href="#19、添加页面萌宠" class="headerlink" title="19、添加页面萌宠"></a>19、添加页面萌宠</h2><p>使用live2d插件，官方网址：<a href="https://github.com/EYHN/hexo-helper-live2d">https://github.com/EYHN/hexo-helper-live2d</a></p>
<ul>
<li><p>安装 live2d 插件，在 Git Bash 中输入以下命令（Blog 文件夹内）：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>默认在页面中展示的是 shizuku，如下图所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213230.png"></p>
<p>根据爱好可自行选择自己的萌宠，所有萌宠在<a href="https://huaji8.top/post/live2d-plugin-2.0/%E4%B8%AD%E6%9C%89gif%E5%8A%A8%E5%9B%BE%E5%B1%95%E7%A4%BA%EF%BC%8C%E4%B8%8B%E9%9D%A2%E6%98%AF%E5%90%8D%E7%A7%B0%E3%80%82">https://huaji8.top/post/live2d-plugin-2.0/中有gif动图展示，下面是名称。</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01</span><br><span class="line">live2d-widget-model-haru/02</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure>

<p>比如选择 <code>live2d-widget-model-wanko</code>，在 Git Bash 中输入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-wanko --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑 <code>Blog\_config.yml </code>文件，添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># live2d插件</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>							<span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span>						<span class="comment">#  使用本地脚本文件</span></span><br><span class="line">  <span class="attr">model:</span>							</span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span>		<span class="comment"># 所使用的萌宠【修改为自己想要】</span></span><br><span class="line">  <span class="attr">display:</span>								<span class="comment"># 萌宠放置位置以及大小</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span>								<span class="comment">#是否在手机端显示</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span> </span><br></pre></td></tr></table></figure></li>
</ul>
<p>注意：live2d可能会与不蒜子计数出现冲突，解决方案见：<a href="https://blog.csdn.net/weixin_37891983/article/details/105362748">https://blog.csdn.net/weixin_37891983/article/details/105362748</a></p>
<h2 id="20、添加文章结束提示语"><a href="#20、添加文章结束提示语" class="headerlink" title="20、添加文章结束提示语"></a>20、添加文章结束提示语</h2><p>将下面代码插入到 <code>themes\next\layout\_macro\post.swig</code> 文件的END POST BODY下面：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color:#ccc;font-size:20px;margin-top:30px&quot;</span>&gt;</span></span><br><span class="line">        -------本 文 结 束 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-paw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 感 谢 您 的 阅 读-------</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/SniperCoding/pictures1/20220210213243.png"  style="zoom:67%;" />

<p>注意文档编码应为 UTF-8.</p>
<h2 id="21、添加本地搜索"><a href="#21、添加本地搜索" class="headerlink" title="21、添加本地搜索"></a>21、添加本地搜索</h2><p>使用 Git Bash 安装搜素插件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>打开 <code>Blog\_config.yml</code> 配置文件，在任意位置添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本地搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span>		<span class="comment"># 索引文件的路径，相对于站点根目录</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span>			<span class="comment"># 搜索范围，默认是 post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">100</span>			<span class="comment"># 限制搜索的条目数</span></span><br></pre></td></tr></table></figure>

<p>修改 <code>Blog\themes\next\_config.yml</code> 文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
</search>
